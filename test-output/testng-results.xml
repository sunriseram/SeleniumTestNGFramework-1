<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-25T13:18:52 EST" name="Default suite" finished-at="2022-01-25T13:19:22 EST" duration-ms="30407">
    <groups>
    </groups>
    <test started-at="2022-01-25T13:18:52 EST" name="Default test" finished-at="2022-01-25T13:19:22 EST" duration-ms="30407">
      <class name="tests.AmazonSearchTests">
        <test-method signature="amazonSearch(java.lang.String)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:18:52 EST" name="amazonSearch" data-provider="myDataBucket" finished-at="2022-01-25T13:19:22 EST" duration-ms="30343" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void tests.AmazonSearchTests.amazonSearch(java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: amazonSearch([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.Integer) 6454]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void tests.AmazonSearchTests.amazonSearch(java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: amazonSearch([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.Integer) 6454]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:46)
at org.testng.internal.Parameters.injectParameters(Parameters.java:886)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:37)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amazonSearch -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:18:52 EST" name="beforeMethod" finished-at="2022-01-25T13:18:53 EST" duration-ms="1482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="amazonSearch(java.lang.String)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:18:53 EST" name="amazonSearch" data-provider="myDataBucket" finished-at="2022-01-25T13:19:04 EST" duration-ms="10338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amazonSearch -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:04 EST" name="beforeMethod" finished-at="2022-01-25T13:19:04 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="amazonSearch(java.lang.String)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:04 EST" name="amazonSearch" data-provider="myDataBucket" finished-at="2022-01-25T13:19:09 EST" duration-ms="5356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pretty coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amazonSearch -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:09 EST" name="beforeMethod" finished-at="2022-01-25T13:19:09 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="amazonSearch(java.lang.String)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:09 EST" name="amazonSearch" data-provider="myDataBucket" finished-at="2022-01-25T13:19:14 EST" duration-ms="5013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cool coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amazonSearch -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:14 EST" name="beforeMethod" finished-at="2022-01-25T13:19:14 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="amazonSearch(java.lang.String)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:14 EST" name="amazonSearch" data-provider="myDataBucket" finished-at="2022-01-25T13:19:18 EST" duration-ms="4112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cute coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amazonSearch -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:18 EST" name="beforeMethod" finished-at="2022-01-25T13:19:18 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="amazonSearch(java.lang.String)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:18 EST" name="amazonSearch" data-provider="myDataBucket" finished-at="2022-01-25T13:19:22 EST" duration-ms="4005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ugly coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amazonSearch -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="beforeMethod" finished-at="2022-01-25T13:19:22 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="objectData(java.lang.Object)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="objectData" data-provider="myDataBucket" finished-at="2022-01-25T13:19:22 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectData -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="beforeMethod" finished-at="2022-01-25T13:19:22 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="objectData(java.lang.Object)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="objectData" data-provider="myDataBucket" finished-at="2022-01-25T13:19:22 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pretty coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectData -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="beforeMethod" finished-at="2022-01-25T13:19:22 EST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="objectData(java.lang.Object)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="objectData" data-provider="myDataBucket" finished-at="2022-01-25T13:19:22 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cool coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectData -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="beforeMethod" finished-at="2022-01-25T13:19:22 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="objectData(java.lang.Object)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="objectData" data-provider="myDataBucket" finished-at="2022-01-25T13:19:22 EST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cute coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectData -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="beforeMethod" finished-at="2022-01-25T13:19:22 EST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="objectData(java.lang.Object)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="objectData" data-provider="myDataBucket" finished-at="2022-01-25T13:19:22 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ugly coffee mug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectData -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="beforeMethod" finished-at="2022-01-25T13:19:22 EST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="objectData(java.lang.Object)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="objectData" data-provider="myDataBucket" finished-at="2022-01-25T13:19:22 EST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6454]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectData -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="beforeMethod" finished-at="2022-01-25T13:19:22 EST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="objectData(java.lang.Object)[pri:0, instance:tests.AmazonSearchTests@50eac852]" started-at="2022-01-25T13:19:22 EST" name="objectData" data-provider="myDataBucket" finished-at="2022-01-25T13:19:22 EST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[768765823]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectData -->
      </class> <!-- tests.AmazonSearchTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
